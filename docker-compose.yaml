version: '3.9'

services:
  # ────────────── DATABASE (PostgreSQL) ──────────────
  db:
    image: postgres:17
    container_name: hr_postgres
    environment:
      POSTGRES_DB:       hrdb
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pg_restore:/pg_backup
      - ./pgdata-new:/var/lib/postgresql/data
      - ./init-scripts/init-db.sh:/docker-entrypoint-initdb.d/01-init-db.sh:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks: [hr-network]
 
  # db:
  #   image: postgres:17
  #   container_name: hr_postgres
  #   environment:
  #     POSTGRES_DB:       hrdb
  #     POSTGRES_USER:     postgres
  #     POSTGRES_PASSWORD: postgres

  #   volumes:
  #     #- pgdata:/var/lib/postgresql/data
  #     #- ./pg_restore:/pg_backup
  #     - ./pg_restore:/pg_backup
  #     - ./pgdata-new:/var/lib/postgresql/data
  #   #  - /mnt/jenkins-data/postgres:/var/lib/postgresql/data
  #     #- ./pgdata:/var/lib/postgresql/data
  #    # - pgdata:/var/lib/postgresql/data
  #     # optional: mount backup + init script
  #     # - ./init-scripts/01-restore-db.sh:/docker-entrypoint-initdb.d/01-restore-db.sh:ro
  #     # - ./pg_restore/hrdb.backup:/pg_restore/hrdb.backup:ro
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres"]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 10
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks: [hr-network]

  # ────────────── JENKINS (CI/CD) ──────────────
  # jenkins:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.jenkins
  #   container_name: hr-jenkins
  #   user: root
  #   ports:
  #     - "8080:8080"
  #     - "50000:50000"
  #   volumes:
  #     - ./jenkins_data:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - .:/workspace
  #     # - /d/Fullstack-hr-app:/var/jenkins_home/workspace/fullstack-hr-pipeline
  #   networks: [hr-network]
  #   restart: unless-stopped

  # ────────────── BACKEND ──────────────
  backend:
    build:
      context: ./backend
    container_name: hr-backend
    env_file:
      - ./backend/.env.development
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks: [hr-network]
    restart: unless-stopped

  # ────────────── FRONTEND ──────────────
  frontend:
    build:
      context: ./frontend
    container_name: hr-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    ports:
      - "5173:5173"
    networks: [hr-network]
    restart: unless-stopped

# ────────────── Networks & Volumes ──────────────
networks:
  hr-network:
    driver: bridge

# volumes:
#   #pgdata:

